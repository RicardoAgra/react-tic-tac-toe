{"version":3,"sources":["constants/menu.states.js","Store/store.actions.js","Containers/header.js","Store/store.players.js","Components/start.js","Components/title.js","Components/square.js","Components/board.js","constants/move-symbols.js","Components/settings.js","Containers/main.js","Containers/footer.js","App.js","serviceWorker.js","AI/board.tsx","AI/ai.js","Store/reducer.js","index.js"],"names":["MENU_STATES","STORE_ACTIONS","StyledHeader","styled","header","_templateObject","Object","taggedTemplateLiteral","TextButton","button","_templateObject2","_templateObject3","Title","h2","_templateObject4","Header","_this$props","this","props","menu","backToMainMenu","restartHandler","undoLastMoveHandler","isPlaying","restartBtn","react_default","a","createElement","className","onClick","undoBtn","backBtn","React","PureComponent","connect","_ref","dispatch","type","payload","PLAYERS","Container","div","start_templateObject","_ref2","nextAction","startMatch","setTimeout","goToSettings","target","rel","href","StyledTitle","title_templateObject","state","objectSpread","memo","victory","messages","tie","human","computer","next","message","Button","square_templateObject","content","isLastMove","clickHandler","classList","push","square_Button","join","prevProps","nextProps","Wrapper","board_templateObject","StyledBoard","article","board_templateObject2","BackgroundDiv","board_templateObject3","VictoryLine","board_templateObject4","PlayAgainBtn","_templateObject5","victoryLineStyles","_victoryLineStyles","defineProperty","transform","Board","boardState","computerMoveHandler","Math","random","lastMove","winningLine","settings","humanMoveHandler","playAgainHandler","board","map","index","position","humanChar","computerChar","Components_square","key","Components_title","style","Component","squareIndex","value","MOVE_SYMBOLS","TIMES","CIRCLE","STAR","SQUARE","settings_templateObject","Subtitle","h3","settings_templateObject2","Aside","settings_templateObject3","IconBtn","settings_templateObject4","Label","label","settings_templateObject5","FirstMove","_templateObject6","FirstMoveRow","_templateObject7","updateFirstToMove","firstToMove","changePlayerSymbol","player","symbol","humanButtons","values","SYMBOL","computerButtons","settings_Title","htmlFor","name","checked","onChange","id","main_templateObject","StyledMain","main","main_templateObject2","main_Container","Components_start","Components_board","Components_settings","StyledFooter","footer","footer_templateObject","P","p","footer_templateObject2","Link","footer_templateObject3","Section","section","App_templateObject","App","Containers_footer","Boolean","window","location","hostname","match","lines","doesCharWinLine","char","charArray","charCount","emptyCount","forEach","charEl","countCharWinningMoves","totalWinningMoves","line","doesCharWin","some","square","isWinner","findIndex","every","hasChar","addMove","newBoard","toConsumableArray","DEFS","findFirstWinningMove","winningMove","find","indexOf","findOptimalNonWinningMove","newBoardState","attackMove","newerBoardState","undefined","move","AI","setDefs","defs","moveCount","winningShapeMove","initialState","Array","fill","moveHistory","updateMoveHistory","nextMove","length","concat","checkVictory","reducer","arguments","action","nextBoard","computerMove","newMoveHistory","newLastMove","pop","entries","_ref3","slicedToArray","entryPlayer","entrySymbol","isSymbolInUse","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9a9b219.chunk.js","sourcesContent":["export const MENU_STATES = {\r\n  MENU: \"menu\",\r\n  PLAYING: \"playing\",\r\n  SETTINGS: \"settings\",\r\n};\r\n","export const STORE_ACTIONS = {\r\n  NAVIGATE: \"NAVIGATE\",\r\n  HUMAN_MOVE: \"HUMAN_MOVE\",\r\n  COMPUTER_MOVE: \"COMPUTER_MOVE\",\r\n  UNDO_LAST_MOVE: \"UNDO_LAST_MOVE\",\r\n  RESTART: \"RESTART\",\r\n  SET_FIRST_TO_MOVE: \"SET_FIRST_TO_MOVE\",\r\n  SET_PLAYER_SYMBOL: \"SET_PLAYER_SYMBOL\",\r\n};\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { MENU_STATES } from \"../constants/menu.states\";\nimport { STORE_ACTIONS } from \"../Store/store.actions\";\n\nconst StyledHeader = styled.header`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 70px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 10px;\n  background: var(--dark);\n\n  :before {\n    content: \"\";\n    position: absolute;\n    left: 50%;\n    width: 100vw;\n    height: 100%;\n    transform: translateX(-50%);\n    background: var(--primary);\n    z-index: -1;\n  }\n`;\n\nconst Button = styled.button`\n  border: none;\n  background: white;\n  padding: 12px 22px;\n  font-weight: 600;\n  cursor: pointer;\n  color: var(--primary-dark);\n  text-transform: uppercase;\n  border-radius: 2px;\n  margin: 0px 4px;\n`;\n\nconst TextButton = styled.button`\n  padding: 12px 22px;\n  font-weight: 600;\n  cursor: pointer;\n  color: white;\n  background: transparent;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n\n  &:hover {\n    color: var(--primary);\n  }\n`;\n\nconst Title = styled.h2`\n  color: var(--light);\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 16px;\n  @media (max-width: 500px) {\n    display: none;\n  }\n`;\n\nclass Header extends React.PureComponent {\n  render() {\n    let { menu, backToMainMenu, restartHandler, undoLastMoveHandler } =\n      this.props;\n    let isPlaying = menu === MENU_STATES.PLAYING;\n\n    let restartBtn = isPlaying ? (\n      <TextButton className=\"button\" onClick={restartHandler}>\n        Restart\n      </TextButton>\n    ) : null;\n\n    let undoBtn = isPlaying ? (\n      <TextButton className=\"button\" onClick={undoLastMoveHandler}>\n        Undo last move\n      </TextButton>\n    ) : null;\n\n    let backBtn =\n      menu !== MENU_STATES.MENU ? (\n        <TextButton className=\"white\" onClick={backToMainMenu}>\n          Back to menu\n        </TextButton>\n      ) : null;\n\n    return (\n      <StyledHeader>\n        {backBtn}\n        <Title>Tic Tac Toe</Title>\n        <div>\n          {undoBtn}\n          {restartBtn}\n        </div>\n      </StyledHeader>\n    );\n  }\n}\n\nconst mapStateToProps = ({ menu }) => {\n  return {\n    menu,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    backToMainMenu: () =>\n      dispatch({\n        type: STORE_ACTIONS.NAVIGATE,\n        payload: { menu: MENU_STATES.MENU },\n      }),\n    restartHandler: () => dispatch({ type: STORE_ACTIONS.RESTART }),\n    undoLastMoveHandler: () => dispatch({ type: STORE_ACTIONS.UNDO_LAST_MOVE }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","export const PLAYERS = {\r\n  HUMAN: \"human\",\r\n  COMPUTER: \"computer\",\r\n};\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { MENU_STATES } from \"../constants/menu.states\";\nimport { STORE_ACTIONS } from \"../Store/store.actions\";\nimport { PLAYERS } from \"../Store/store.players\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  h1 {\n    font-size: 35px;\n    text-transform: uppercase;\n    padding: 5px;\n    margin: 10px 0;\n    cursor: pointer;\n  }\n`;\n\nconst start = ({ nextAction, startMatch, goToSettings }) => {\n  return (\n    <Container>\n      <h1 onClick={() => startMatch(nextAction)}>Play</h1>\n      <h1 onClick={goToSettings}>Settings</h1>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/RicardoAgra/react-tic-tac-toe\"\n      >\n        <h1>View Project</h1>\n      </a>\n    </Container>\n  );\n};\n\nconst mapStateToProps = ({ nextAction }) => {\n  return { nextAction };\n};\n\nconst mapDispactchToProps = (dispatch) => {\n  return {\n    startMatch: (nextAction) => {\n      if (nextAction === PLAYERS.COMPUTER) {\n        setTimeout(() => dispatch({ type: STORE_ACTIONS.COMPUTER_MOVE }), 500);\n      }\n\n      return dispatch({\n        type: STORE_ACTIONS.NAVIGATE,\n        payload: { menu: MENU_STATES.PLAYING },\n      });\n    },\n    goToSettings: () =>\n      dispatch({\n        type: STORE_ACTIONS.NAVIGATE,\n        payload: { menu: MENU_STATES.SETTINGS },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispactchToProps)(start);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst StyledTitle = styled.h2`\n  margin-bottom: 50px;\n  color: var(--light);\n  font-size: 26px;\n  white-space: nowrap;\n`;\n\nconst title = ({ victory, nextAction }) => {\n  const messages = {\n    victory: {\n      tie: \"It's a Tie!\",\n      human: \"Human wins!\",\n      computer: \"Computer wins!\",\n    },\n    next: {\n      human: \"Turn to move: Human\",\n      computer: \"Turn to move: Computer\",\n    },\n  };\n  let message = \"\";\n\n  if (victory) {\n    message = messages.victory[victory];\n  } else {\n    message = messages.next[nextAction];\n  }\n\n  return <StyledTitle>{message}</StyledTitle>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  };\n};\n\nexport default connect(mapStateToProps)(React.memo(title));\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  width: 80px;\n  height: 80px;\n  margin: 10px;\n  border-radius: 10px;\n  background: transparent;\n  font-size: 50px;\n  cursor: pointer;\n  border: none;\n\n  &.disabled:hover {\n    animation: popin 0.5s;\n  }\n  &.previous-move {\n    background: var(--light);\n  }\n\n  i {\n    opacity: 0.5;\n    transform: scale(0.5);\n    transition: all 0.5s;\n  }\n\n  i.fas,\n  i.far {\n    opacity: 1;\n    transform: scale(1);\n  }\n`;\n\nconst square = ({ content, isLastMove, clickHandler }) => {\n  let classList = [\"square\"];\n  if (isLastMove) {\n    classList.push(\"previous-move\");\n  }\n\n  return (\n    <Button className={classList.join(\" \")} onClick={clickHandler}>\n      <i className={content}></i>\n    </Button>\n  );\n};\n\nexport default React.memo(\n  square,\n  (prevProps, nextProps) =>\n    prevProps.content === nextProps.content &&\n    prevProps.isLastMove === nextProps.isLastMove\n);\n","import React from \"react\";\nimport Title from \"../Components/title\";\nimport Square from \"./square\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { STORE_ACTIONS } from \"../Store/store.actions\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledBoard = styled.article`\n  width: 300px;\n  height: 300px;\n  border-radius: 4px;\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst BackgroundDiv = styled.div`\n  position: absolute;\n\n  &.horizontal {\n    left: 5px;\n    width: 290px;\n    border-top: 1px solid #666;\n    border-bottom: 1px solid #fbfbfb;\n    top: 199px;\n  }\n  &.horizontal:first-of-type {\n    top: 99px;\n  }\n  &.vertical {\n    height: 290px;\n    border-left: 1px solid #666;\n    border-right: 1px solid #fbfbfb;\n    left: 199px;\n    top: 5px;\n  }\n  &.vertical:nth-of-type(3) {\n    left: 99px;\n  }\n`;\n\nconst VictoryLine = styled.div`\n  border-bottom: 3px solid white;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 100%;\n  border-radius: 2px;\n`;\n\nconst PlayAgainBtn = styled.button`\n  opacity: 0;\n  margin-top: 40px;\n  transform: translateY(15px);\n  transition: transform 0.2s cubic-bezier(0.18, 0.69, 0.42, 0.94);\n  color: var(--primary);\n  border: 2px solid var(--primary);\n  border-radius: 4px;\n  padding: 16px 24px;\n  font-size: 20px;\n  background: transparent;\n  cursor: pointer;\n  font-weight: bold;\n\n  &.visible {\n    opacity: 1;\n    transform: translateY(0);\n    transition: transform 0.5s cubic-bezier(0.18, 0.69, 0.42, 0.94) 0.4s;\n  }\n`;\n\nconst victoryLineStyles = {\n  [-1]: {\n    transform: \"translate(-50%, -50%) scaleX(0)\",\n  },\n  0: { transform: \"translate(-50%, -100px) scaleX(1)\" },\n  1: { transform: \"translate(-50%, 0) scaleX(1)\" },\n  2: { transform: \"translate(-50%, 100px) scaleX(1)\" },\n  3: { transform: \"translate(-250px, 0) scaleX(1) rotate(90deg)\" },\n  4: { transform: \"translate(-150px, 0) scaleX(1) rotate(90deg)\" },\n  5: { transform: \"translate(-50px, 0) scaleX(1) rotate(90deg)\" },\n  6: { transform: \"translate(-50%, 0) scaleX(1) rotate(45deg)\" },\n  7: { transform: \"translate(-50%, 0) scaleX(1) rotate(315deg)\" },\n};\n\nclass Board extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.boardState !== this.props.boardState) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentWillUpdate(nextProps) {\n    if (nextProps.nextAction === \"computer\") {\n      setTimeout(this.props.computerMoveHandler, 500 + Math.random() * 250);\n    }\n  }\n\n  render() {\n    const {\n      boardState,\n      lastMove,\n      winningLine,\n      victory,\n      settings,\n      humanMoveHandler,\n      playAgainHandler,\n    } = this.props;\n\n    let board = boardState.map((state, index) => {\n      let isLastMove = lastMove.position === index;\n      let content = state\n        ? state === \"x\"\n          ? settings.humanChar\n          : settings.computerChar\n        : \"\";\n\n      return (\n        <Square\n          key={index}\n          content={content}\n          isLastMove={isLastMove}\n          clickHandler={() => {\n            humanMoveHandler(index);\n          }}\n        />\n      );\n    });\n\n    return (\n      <Wrapper>\n        <Title />\n\n        <StyledBoard className=\"Board\">\n          {board}\n          <BackgroundDiv className=\"horizontal\" />\n          <BackgroundDiv className=\"horizontal\" />\n          <BackgroundDiv className=\"vertical\" />\n          <BackgroundDiv className=\"vertical\" />\n          <VictoryLine style={victoryLineStyles[winningLine]}></VictoryLine>\n        </StyledBoard>\n\n        <PlayAgainBtn\n          className={victory ? \"visible\" : \"\"}\n          onClick={playAgainHandler}\n        >\n          Play again\n        </PlayAgainBtn>\n      </Wrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    humanMoveHandler: (squareIndex) =>\n      dispatch({ type: STORE_ACTIONS.HUMAN_MOVE, value: squareIndex }),\n    computerMoveHandler: () => dispatch({ type: STORE_ACTIONS.COMPUTER_MOVE }),\n    playAgainHandler: () => dispatch({ type: STORE_ACTIONS.RESTART }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n","export const MOVE_SYMBOLS = {\r\n  TIMES: \"fas fa-times\",\r\n  CIRCLE: \"far fa-circle\",\r\n  STAR: \"far fa-star\",\r\n  SQUARE: \"far fa-square\",\r\n};\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { STORE_ACTIONS } from \"../Store/store.actions\";\nimport { MOVE_SYMBOLS } from \"../constants/move-symbols\";\nimport { PLAYERS } from \"../Store/store.players\";\n\nconst Title = styled.h2`\n  color: var(--light);\n  font-size: 28px;\n  padding-bottom: 12px;\n`;\n\nconst Subtitle = styled.h3`\n\tfont-size: 18px\n\tpadding-top: 24px\n\tpadding-bottom: 12px\n`;\n\nconst Aside = styled.div``;\n\nconst IconBtn = styled.button`\n\tborder: none;\n\tbackground: transparent\n\tborder-radius: 4px;\n\twidth: 48px;\n\theight: 48px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tcursor: pointer;\n\tfont-size: 20px;\n\tmargin: 0 4px;\n\n\t&.selected {\n\t\tbackground: var(--light);\n\t\tcolor: var(--medium);\n\t}\n\t&.selected:hover {\n\t\tcolor: var(--primary);\n\t}\n`;\n\nconst Label = styled.label`\n  padding-right: 8px;\n`;\n\nconst FirstMove = styled.div`\n  padding-bottom: 24px;\n`;\n\nconst FirstMoveRow = styled.div`\n  width: 200px;\n  margin: auto;\n  justify-content: space-between;\n\n  > * {\n    cursor: pointer;\n  }\n`;\n\nconst settings = ({\n  firstToMove,\n  humanChar,\n  computerChar,\n  updateFirstToMove,\n  changePlayerSymbol,\n}) => {\n  let humanButtons = Object.values(MOVE_SYMBOLS).map((SYMBOL, index) => (\n    <IconBtn\n      key={index}\n      className={humanChar === SYMBOL ? \"selected\" : \"\"}\n      onClick={() => changePlayerSymbol(PLAYERS.HUMAN, SYMBOL)}\n    >\n      <i className={SYMBOL}></i>\n    </IconBtn>\n  ));\n\n  let computerButtons = Object.values(MOVE_SYMBOLS).map((SYMBOL, index) => (\n    <IconBtn\n      key={index}\n      className={computerChar === SYMBOL ? \"selected\" : \"\"}\n      onClick={() => changePlayerSymbol(PLAYERS.COMPUTER, SYMBOL)}\n    >\n      <i className={SYMBOL}></i>\n    </IconBtn>\n  ));\n\n  return (\n    <Aside>\n      <Title className=\"color-light\">SETTINGS</Title>\n      <div>\n        <Subtitle>First to Move</Subtitle>\n        <FirstMove>\n          <FirstMoveRow className=\"flex\">\n            <Label htmlFor=\"human\">Human</Label>\n            <input\n              type=\"radio\"\n              name=\"first\"\n              checked={firstToMove === \"human\"}\n              onChange={() => updateFirstToMove(\"human\")}\n            />\n          </FirstMoveRow>\n          <FirstMoveRow className=\"flex\">\n            <Label htmlFor=\"computer\">Computer</Label>\n            <input\n              id=\"computer\"\n              type=\"radio\"\n              name=\"first\"\n              checked={firstToMove === \"computer\"}\n              onChange={() => updateFirstToMove(\"computer\")}\n            />\n          </FirstMoveRow>\n        </FirstMove>\n\n        <Subtitle>Human Symbol</Subtitle>\n        <div className=\"flex flex-center\">{humanButtons}</div>\n\n        <Subtitle>Computer Symbol</Subtitle>\n        <div className=\"flex flex-center\">{computerButtons}</div>\n      </div>\n    </Aside>\n  );\n};\n\nconst mapStateToProps = ({ settings }) => {\n  return {\n    ...settings,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateFirstToMove: (firstToMove) =>\n      dispatch({\n        type: STORE_ACTIONS.SET_FIRST_TO_MOVE,\n        payload: {\n          firstToMove,\n        },\n      }),\n    changePlayerSymbol: (player, symbol) =>\n      dispatch({\n        type: STORE_ACTIONS.SET_PLAYER_SYMBOL,\n        payload: {\n          player,\n          symbol,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(settings);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Start from \"../Components/start\";\nimport Board from \"../Components/board\";\nimport Settings from \"../Components/settings\";\n\nconst Container = styled.div`\n  position: relative;\n  width: 300px;\n  margin: auto;\n`;\n\nconst StyledMain = styled.main`\n  position: relative;\n  margin: 100px auto;\n\n  > div:first-child {\n    transform: rotateX(0deg) translateZ(200px);\n    transition: all 0.3s ease-out;\n  }\n\n  &.playing > div:first-child {\n    transform: rotateX(90deg) translateZ(200px);\n  }\n\n  &.settings > div:first-child {\n    transform: rotateX(-90deg) translateZ(200px);\n  }\n\n  > div:nth-child(2) {\n    transform: rotateX(-90deg) translateZ(200px);\n    transition: all 0.3s ease-out;\n  }\n\n  &.playing > div:nth-child(2) {\n    transform: rotateX(0deg) translateZ(200px);\n  }\n\n  > div:nth-child(3) {\n    position: absolute;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    transform: rotateX(90deg) translateZ(200px);\n    transition: all 0.3s ease-out;\n  }\n\n  &.settings > div:nth-child(3) {\n    transform: rotateX(0deg) translateZ(200px);\n  }\n`;\n\nexport const Main = ({ menu }) => {\n  return (\n    <Container>\n      <StyledMain className={menu}>\n        <Start />\n        <Board />\n        <Settings />\n      </StyledMain>\n    </Container>\n  );\n};\n\nconst mapStateToProps = ({ menu }) => {\n  return {\n    menu,\n  };\n};\n\nexport default connect(mapStateToProps)(Main);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledFooter = styled.footer`\n  background-color: var(--dark);\n  color: white;\n  padding: 10px;\n  font-size: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst P = styled.p`\n  width: 50%;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n\n  svg {\n    width: 20px;\n    margin: 0 5px;\n  }\n\n  &.first {\n    justify-content: flex-end;\n  }\n`;\n\nconst Link = styled.a`\n  margin-left: 4px;\n`;\n\nconst footer = () => {\n  return (\n    <StyledFooter>\n      <P className=\"first\">\n        <i className=\"fab fa-linkedin\" />\n        &nbsp;Made by{\" \"}\n        <Link\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.linkedin.com/in/ricardo-agra-800057128/\"\n        >\n          Ricardo Agra\n        </Link>\n      </P>\n      <P>\n        <i className=\"fab fa-react\" />\n        &nbsp;Powered by\n        <Link\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://reactjs.org/\"\n        >\n          React\n        </Link>\n        .\n      </P>\n    </StyledFooter>\n  );\n};\n\nexport default footer;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./Containers/header\";\nimport Main from \"./Containers/main\";\nimport Footer from \"./Containers/footer\";\n\nconst Section = styled.section`\n  text-align: center;\n  min-height: 100vh;\n  display: flex;\n  justify-content: space-between;\n  flex-flow: column;\n  background: var(--dark);\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <Section className=\"App\">\n        <Header></Header>\n        <Main></Main>\n        <Footer></Footer>\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const lines: number[][] = [\n  [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows\n  [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns\n  [0, 4, 8], [2, 4, 6]             // Diagonals\n]\n\nconst addMove = (boardState: string[], char: string, index: number): string[] => {\n  var newBoard = [...boardState];\n  newBoard[index] = char;\n\n  return newBoard;\n}\n\nconst isWinner = (boardState: string[], char: string): number => {\n  let some = lines.findIndex(line => {\n    let aux = line.every(index => boardState[index] === char)\n    return aux;\n  });\n\n  return some;\n}\n\nconst hasChar = (boardState: string[], char: string): boolean => {\n  return boardState.some(square => square === char);\n}\n\nconst doesCharWinLine = (char: string, charArray: string[]): boolean => {\n  let charCount = 0;\n  let emptyCount = 0;\n\n  charArray.forEach(charEl => {\n    if (charEl === char) { charCount += 1; }\n    if (charEl === \"\") { emptyCount += 1; }\n  });\n\n  return (emptyCount === 1 && charCount === 2);\n}\n\nconst countCharWinningMoves = (boardState: string[], char: string): number => {\n  let totalWinningMoves = 0;\n\n  lines.forEach(line => {\n    let charArray = line.map(index => boardState[index]);\n\n    totalWinningMoves += doesCharWinLine(char, charArray) ? 1 : 0;\n  });\n\n  return totalWinningMoves;\n}\n\nconst doesCharWin = (boardState: string[], char: string): boolean => {\n  return boardState.some(square => {\n    return (square !== \"\" && countCharWinningMoves(boardState, char) > 0);\n  });\n}\n\ninterface Board {\n  lines: number[][];\n  countCharWinningMoves(boardState: string[], char: string): number;\n  doesCharWinLine(char: string, charArray: string[]): boolean;\n  doesCharWin(boardState: string[], char: string): boolean;\n  isWinner(boardState: string[], char: string): number;\n  hasChar(boardState: string[], char: string): boolean;\n  addMove(boardState: string[], char: string, index: number): string[]\n}\n\nconst board: Board = {\n  countCharWinningMoves: countCharWinningMoves,\n  doesCharWinLine: doesCharWinLine,\n  doesCharWin: doesCharWin,\n  isWinner: isWinner,\n  hasChar: hasChar,\n  addMove: addMove,\n  lines: lines,\n}\n\nexport default board;","import Board from \"./board\";\n\nlet DEFS = {\n  computer: \"o\",\n  human: \"x\",\n};\n\nconst makeMove = (boardState, moveCount) => {\n  switch (moveCount) {\n    case 0:\n      return 0;\n\n    case 1: {\n      if (boardState[4] !== \"\") {\n        return 0;\n      }\n      return 4;\n    }\n\n    case 2: {\n      if (boardState[1] !== \"\" || boardState[3] !== \"\") {\n        return 4;\n      }\n      if (boardState[8] !== \"\") {\n        return 4;\n      }\n      if (boardState[5] !== \"\") {\n        return 2;\n      }\n      if (boardState[7] !== \"\") {\n        return 6;\n      }\n      return 8;\n    }\n\n    case 9: {\n      return -1;\n    }\n\n    default: {\n      let winningMove = findFirstWinningMove(boardState);\n\n      if (winningMove !== undefined) {\n        return winningMove;\n      }\n\n      let winningShapeMove = findOptimalNonWinningMove(boardState);\n      if (winningShapeMove !== undefined) {\n        return winningShapeMove;\n      }\n\n      var moveOrderPriority = [4, 0, 2, 6, 8, 1, 3, 5, 7];\n      return moveOrderPriority.find((move) => !boardState[move]) || -1;\n    }\n  }\n};\n\nconst findFirstWinningMove = (boardState) => {\n  let winningMove;\n\n  Board.lines.find((line) => {\n    let charArray = line.map((index) => boardState[index]);\n\n    if (Board.doesCharWinLine(DEFS.computer, charArray)) {\n      winningMove = line[charArray.indexOf(\"\")];\n      return true;\n    }\n    if (Board.doesCharWinLine(DEFS.human, charArray)) {\n      winningMove = line[charArray.indexOf(\"\")];\n    }\n\n    return false;\n  });\n\n  return winningMove;\n};\n\nconst findOptimalNonWinningMove = (boardState) => {\n  let shapeMove = boardState.findIndex((square, index) => {\n    let newBoardState = Board.addMove(boardState, DEFS.computer, index);\n\n    return (\n      square === \"\" &&\n      Board.countCharWinningMoves(newBoardState, DEFS.computer) >= 2\n    );\n  });\n\n  let attackMove = boardState.findIndex((square, index) => {\n    let newBoardState = Board.addMove(boardState, DEFS.computer, index);\n    let attackMove = findFirstWinningMove(newBoardState);\n    let newerBoardState = Board.addMove(newBoardState, DEFS.human, attackMove);\n\n    return (\n      square === \"\" &&\n      attackMove !== undefined &&\n      Board.countCharWinningMoves(newerBoardState, DEFS.human) < 2\n    );\n  });\n\n  return [shapeMove, attackMove].find((move) => move !== -1);\n};\n\nconst AI = {\n  setDefs: (defs) => {\n    DEFS = { ...defs };\n  },\n  move: makeMove,\n};\n\nexport default AI;\n","import Board from \"../AI/board\";\nimport AI from \"../AI/ai\";\nimport { MENU_STATES } from \"../constants/menu.states\";\nimport { STORE_ACTIONS } from \"./store.actions\";\nimport { PLAYERS } from \"./store.players\";\nimport { MOVE_SYMBOLS } from \"../constants/move-symbols\";\n\nconst defs = {\n  human: \"x\",\n  computer: \"o\",\n};\n\nconst initialState = {\n  menu: MENU_STATES.MENU,\n  boardState: Array(9).fill(\"\"),\n  lastMove: { char: \"\", position: null },\n  nextAction: PLAYERS.COMPUTER,\n  moveHistory: [],\n  victory: \"\",\n  winningLine: -1,\n  settings: {\n    firstToMove: PLAYERS.COMPUTER,\n    humanChar: MOVE_SYMBOLS.TIMES,\n    computerChar: MOVE_SYMBOLS.CIRCLE,\n  },\n};\n\nconst updateMoveHistory = (moveHistory, nextMove) => {\n  let newMoveHistory = moveHistory.length\n    ? [...moveHistory, nextMove]\n    : [nextMove];\n  return newMoveHistory;\n};\n\nconst checkVictory = (boardState) => {\n  let winningLine = Board.isWinner(boardState, defs.computer);\n\n  if (winningLine > -1) {\n    return {\n      winningLine,\n      victory: PLAYERS.COMPUTER,\n    };\n  }\n\n  winningLine = Board.isWinner(boardState, defs.human);\n  if (winningLine > -1) {\n    return {\n      winningLine,\n      victory: PLAYERS.HUMAN,\n    };\n  }\n\n  if (!Board.hasChar(boardState, \"\")) {\n    return {\n      victory: \"tie\",\n    };\n  }\n\n  return \"\";\n};\n\nconst isSymbolInUse = ({ player, symbol }, state) => {\n  return Object.entries(state.settings).some(\n    ([entryPlayer, entrySymbol]) =>\n      entryPlayer !== player && entrySymbol === symbol\n  );\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case STORE_ACTIONS.NAVIGATE: {\n      return {\n        ...state,\n        menu: action.payload.menu,\n      };\n    }\n    case STORE_ACTIONS.HUMAN_MOVE: {\n      if (\n        !state.victory &&\n        state.nextAction === PLAYERS.HUMAN &&\n        state.boardState[action.value] === \"\"\n      ) {\n        let nextBoard = Board.addMove(\n          state.boardState,\n          defs.human,\n          action.value\n        );\n\n        return {\n          ...state,\n          boardState: nextBoard,\n          lastMove: { position: action.value, char: state.settings.humanChar },\n          nextAction: PLAYERS.COMPUTER,\n          moveHistory: updateMoveHistory(state.moveHistory, action.value),\n          ...checkVictory(nextBoard),\n        };\n      } else {\n        return state;\n      }\n    }\n    case STORE_ACTIONS.COMPUTER_MOVE: {\n      let computerMove = AI.move(state.boardState, state.moveHistory.length);\n\n      if (state.nextAction === PLAYERS.COMPUTER && computerMove > -1) {\n        let nextBoard = Board.addMove(\n          state.boardState,\n          defs.computer,\n          computerMove\n        );\n\n        return {\n          ...state,\n          boardState: nextBoard,\n          nextAction: PLAYERS.HUMAN,\n          moveHistory: updateMoveHistory(state.moveHistory, computerMove),\n          victory: checkVictory(nextBoard),\n          ...checkVictory(nextBoard),\n        };\n      } else {\n        return {\n          ...state,\n          nextAction: PLAYERS.HUMAN,\n          moveHistory: updateMoveHistory(state.moveHistory, -1),\n        };\n      }\n    }\n    case STORE_ACTIONS.UNDO_LAST_MOVE: {\n      if (state.lastMove.position !== null && state.nextAction === \"human\") {\n        let newBoardState = [...state.boardState];\n        let newMoveHistory = [...state.moveHistory];\n        let newLastMove = { ...state.lastMove };\n\n        newLastMove.position =\n          newMoveHistory.length >= 4\n            ? newMoveHistory[newMoveHistory.length - 4]\n            : null;\n        newBoardState[newMoveHistory.pop()] = \"\";\n        newBoardState[newMoveHistory.pop()] = \"\";\n\n        return {\n          ...state,\n          boardState: newBoardState,\n          lastMove: newLastMove,\n          moveHistory: newMoveHistory,\n          victory: \"\",\n          winningLine: -1,\n        };\n      }\n      return state;\n    }\n    case STORE_ACTIONS.RESTART: {\n      return {\n        ...initialState,\n        menu: MENU_STATES.PLAYING,\n        nextAction: state.settings.firstToMove,\n        settings: state.settings,\n      };\n    }\n    case STORE_ACTIONS.SET_FIRST_TO_MOVE: {\n      let nextAction = state.nextAction;\n\n      if (state.moveHistory.length === 0) {\n        nextAction = action.payload.firstToMove;\n      }\n\n      return {\n        ...state,\n        nextAction,\n        settings: {\n          ...state.settings,\n          ...action.payload,\n        },\n      };\n    }\n    case STORE_ACTIONS.SET_PLAYER_SYMBOL: {\n      if (isSymbolInUse(action.payload, state)) {\n        return state;\n      }\n\n      return {\n        ...state,\n        settings: {\n          ...state.settings,\n          [action.payload.player + \"Char\"]: action.payload.symbol,\n        },\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Assets/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './Store/reducer';\n\nconst store = createStore( reducer );\n\nReactDOM.render(<Provider store={ store }><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}